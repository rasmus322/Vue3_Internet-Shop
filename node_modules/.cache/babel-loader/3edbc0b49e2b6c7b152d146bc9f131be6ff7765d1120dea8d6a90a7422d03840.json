{"ast":null,"code":"import axios from 'axios';\nimport { API_BASE_URL } from '@/config.js';\nexport default {\n  props: ['priceFrom', 'priceTo', 'categoryId'],\n  data() {\n    return {\n      currentPriceFrom: 0,\n      currentPriceTo: 0,\n      currentCategoryId: 0,\n      currentColor: null,\n      categoriesData: null,\n      colorsData: null\n    };\n  },\n  computed: {\n    categories() {\n      return this.categoriesData ? this.categoriesData.items : [];\n    },\n    colors() {\n      return this.colorsData ? this.colorsData.items : [];\n    }\n  },\n  watch: {\n    priceFrom(value) {\n      this.currentPriceFrom = value;\n    },\n    priceTo(value) {\n      this.currentPriceTo = value;\n    },\n    categoryId(value) {\n      this.currentCategoryId = value;\n    },\n    color(value) {\n      this.currentColor = value;\n    }\n  },\n  methods: {\n    submit() {\n      this.$emit('update:price-from', this.currentPriceFrom);\n      this.$emit('update:price-to', this.currentPriceTo);\n      this.$emit('update:category-id', this.currentCategoryId);\n      this.$emit('update:color', this.currentColor);\n    },\n    reset() {\n      this.currentPriceFrom = 0;\n      this.currentPriceTo = 0;\n      this.currentCategoryId = 0;\n      this.submit();\n    },\n    loadCategories() {\n      axios.get(API_BASE_URL + '/api/productCategories').then(response => this.categoriesData = response.data);\n    },\n    loadColors() {\n      axios.get(API_BASE_URL + '/api/colors').then(response => this.colorsData = response.data);\n    }\n  },\n  created() {\n    this.loadCategories(), this.loadColors();\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","props","data","currentPriceFrom","currentPriceTo","currentCategoryId","currentColor","categoriesData","colorsData","computed","categories","items","colors","watch","priceFrom","value","priceTo","categoryId","color","methods","submit","$emit","reset","loadCategories","get","then","response","loadColors","created"],"sources":["src/components/ProductFilter.vue"],"sourcesContent":["<template>\n  <aside class=\"filter\">\n    <h2 class=\"filter__title\">Фильтры</h2>\n\n    <form class=\"filter__form form\" action=\"#\" method=\"get\" @submit.prevent=\"submit\">\n      <fieldset class=\"form__block\">\n        <legend class=\"form__legend\">Цена</legend>\n        <label class=\"form__label form__label--price\" for=\"min-price\">\n          <input class=\"form__input\" type=\"text\" name=\"min-price\"\n          v-model.number=\"currentPriceFrom\"/>\n          <span class=\"form__value\">От</span>\n        </label>\n        <label class=\"form__label form__label--price\" for=\"max-price\">\n          <input class=\"form__input\" type=\"text\" name=\"max-price\"\n          v-model.number=\"currentPriceTo\"/>\n          <span class=\"form__value\">До</span>\n        </label>\n      </fieldset>\n\n      <fieldset class=\"form__block\">\n        <legend class=\"form__legend\">Категория</legend>\n        <label class=\"form__label form__label--select\" for=\"category\">\n          <select class=\"form__select\" type=\"text\" name=\"category\"\n          v-model.number=\"currentCategoryId\">\n            <option value=0>Все категории</option>\n            <option :value=\"category.id\" v-for=\"category in categories\" :key=\"category.id\">\n              {{ category.title }}\n            </option>\n          </select>\n        </label>\n      </fieldset>\n\n      <fieldset class=\"form__block\">\n        <legend class=\"form__legend\">Цвет</legend>\n        <ul class=\"colors\">\n          <li class=\"colors__item\" v-for=\"color in colors\" :key=\"color.id\">\n            <label class=\"colors__label\" :for=\"color\">\n              <input class=\"colors__radio sr-only\" :id=\"color.id\" type=\"radio\" v-model=\"currentColor\" :value=\"color.color\" />\n              <span class=\"colors__value\" :style=\"{backgroundColor: color.color}\"> </span>\n            </label>\n          </li>\n        </ul>\n      </fieldset>\n\n      <fieldset class=\"form__block\">\n        <legend class=\"form__legend\">Объемб в ГБ</legend>\n        <ul class=\"check-list\">\n          <li class=\"check-list__item\">\n            <label class=\"check-list__label\" for=\"volume\">\n              <input\n                class=\"check-list__check sr-only\"\n                type=\"checkbox\"\n                name=\"volume\"\n                value=\"8\"\n                checked=\"\"\n              />\n              <span class=\"check-list__desc\">\n                8\n                <span>(313)</span>\n              </span>\n            </label>\n          </li>\n          <li class=\"check-list__item\">\n            <label class=\"check-list__label\" for=\"volume\">\n              <input class=\"check-list__check sr-only\" type=\"checkbox\" name=\"volume\" value=\"16\" />\n              <span class=\"check-list__desc\">\n                16\n                <span>(461)</span>\n              </span>\n            </label>\n          </li>\n          <li class=\"check-list__item\">\n            <label class=\"check-list__label\" for=\"volume\">\n              <input class=\"check-list__check sr-only\" type=\"checkbox\" name=\"volume\" value=\"32\" />\n              <span class=\"check-list__desc\">\n                32\n                <span>(313)</span>\n              </span>\n            </label>\n          </li>\n          <li class=\"check-list__item\">\n            <label class=\"check-list__label\" for=\"volume\">\n              <input class=\"check-list__check sr-only\" type=\"checkbox\" name=\"volume\" value=\"64\" />\n              <span class=\"check-list__desc\">\n                64\n                <span>(313)</span>\n              </span>\n            </label>\n          </li>\n          <li class=\"check-list__item\">\n            <label class=\"check-list__label\" for=\"volume\">\n              <input class=\"check-list__check sr-only\" type=\"checkbox\" name=\"volume\" value=\"128\" />\n              <span class=\"check-list__desc\">\n                128\n                <span>(313)</span>\n              </span>\n            </label>\n          </li>\n          <li class=\"check-list__item\">\n            <label class=\"check-list__label\" for=\"volume\">\n              <input class=\"check-list__check sr-only\" type=\"checkbox\" name=\"volume\" value=\"264\" />\n              <span class=\"check-list__desc\">\n                264\n                <span>(313)</span>\n              </span>\n            </label>\n          </li>\n        </ul>\n      </fieldset>\n\n      <button class=\"filter__submit button button--primery\" type=\"submit\">Применить</button>\n      <button class=\"filter__reset button button--second\"\n              type=\"button\" @click.prevent=\"reset\">\n        Сбросить\n      </button>\n    </form>\n  </aside>\n</template>\n\n<script>\nimport axios from 'axios'\nimport {API_BASE_URL} from '@/config.js'\n\nexport default {\n  props: ['priceFrom', 'priceTo', 'categoryId'],\n  data() {\n    return {\n      currentPriceFrom: 0,\n      currentPriceTo: 0,\n      currentCategoryId: 0,\n      currentColor: null,\n\n      categoriesData: null,\n      colorsData: null\n    }\n  },\n  computed: {\n    categories() {\n      return this.categoriesData ? this.categoriesData.items : [];\n    },\n    colors() {\n      return this.colorsData ? this.colorsData.items : []\n    }\n  },\n  watch: {\n    priceFrom(value) {\n      this.currentPriceFrom = value\n    },\n    priceTo(value) {\n      this.currentPriceTo = value\n    },\n    categoryId(value) {\n      this.currentCategoryId = value\n    },\n    color(value) {\n      this.currentColor = value\n    }\n  },\n  methods: {\n    submit() {\n      this.$emit('update:price-from', this.currentPriceFrom);\n      this.$emit('update:price-to', this.currentPriceTo);\n      this.$emit('update:category-id', this.currentCategoryId);\n      this.$emit('update:color', this.currentColor);\n    },\n    reset() {\n      this.currentPriceFrom = 0;\n      this.currentPriceTo = 0;\n      this.currentCategoryId = 0;\n      this.submit();\n    },\n    loadCategories() {\n      axios.get(API_BASE_URL + '/api/productCategories')\n        .then(response => this.categoriesData = response.data)\n    },\n    loadColors() {\n      axios.get(API_BASE_URL + '/api/colors')\n        .then(response => this.colorsData = response.data)\n    }\n  },\n  created() {\n    this.loadCategories(),\n    this.loadColors()\n  }\n};\n</script>\n\n<style>\n\n</style>"],"mappings":"AAwHA,OAAAA,KAAA;AACA,SAAAC,YAAA;AAEA;EACAC,KAAA;EACAC,KAAA;IACA;MACAC,gBAAA;MACAC,cAAA;MACAC,iBAAA;MACAC,YAAA;MAEAC,cAAA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACAC,WAAA;MACA,YAAAH,cAAA,QAAAA,cAAA,CAAAI,KAAA;IACA;IACAC,OAAA;MACA,YAAAJ,UAAA,QAAAA,UAAA,CAAAG,KAAA;IACA;EACA;EACAE,KAAA;IACAC,UAAAC,KAAA;MACA,KAAAZ,gBAAA,GAAAY,KAAA;IACA;IACAC,QAAAD,KAAA;MACA,KAAAX,cAAA,GAAAW,KAAA;IACA;IACAE,WAAAF,KAAA;MACA,KAAAV,iBAAA,GAAAU,KAAA;IACA;IACAG,MAAAH,KAAA;MACA,KAAAT,YAAA,GAAAS,KAAA;IACA;EACA;EACAI,OAAA;IACAC,OAAA;MACA,KAAAC,KAAA,2BAAAlB,gBAAA;MACA,KAAAkB,KAAA,yBAAAjB,cAAA;MACA,KAAAiB,KAAA,4BAAAhB,iBAAA;MACA,KAAAgB,KAAA,sBAAAf,YAAA;IACA;IACAgB,MAAA;MACA,KAAAnB,gBAAA;MACA,KAAAC,cAAA;MACA,KAAAC,iBAAA;MACA,KAAAe,MAAA;IACA;IACAG,eAAA;MACAxB,KAAA,CAAAyB,GAAA,CAAAxB,YAAA,6BACAyB,IAAA,CAAAC,QAAA,SAAAnB,cAAA,GAAAmB,QAAA,CAAAxB,IAAA;IACA;IACAyB,WAAA;MACA5B,KAAA,CAAAyB,GAAA,CAAAxB,YAAA,kBACAyB,IAAA,CAAAC,QAAA,SAAAlB,UAAA,GAAAkB,QAAA,CAAAxB,IAAA;IACA;EACA;EACA0B,QAAA;IACA,KAAAL,cAAA,IACA,KAAAI,UAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}