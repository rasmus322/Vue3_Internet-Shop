{"ast":null,"code":"import ProductList from '@/components/ProductList.vue';\nimport BasePagination from '@/components/BasePagination.vue';\nimport ProductFilter from '@/components/ProductFilter.vue';\nimport axios from 'axios';\nimport { API_BASE_URL } from '@/config.js';\nexport default {\n  components: {\n    ProductList,\n    BasePagination,\n    ProductFilter\n  },\n  data() {\n    return {\n      filterPriceFrom: 0,\n      filterPriceTo: 0,\n      filterCategoryId: 0,\n      page: 1,\n      productsPerPage: 3,\n      productsData: null,\n      productsLoading: false,\n      productsLoadingFailed: false\n    };\n  },\n  computed: {\n    products() {\n      return this.productsData ? this.productsData.items.map(product => {\n        return {\n          ...product,\n          image: product.image.file.url\n        };\n      }) : [];\n    },\n    countProducts() {\n      return this.productsData ? this.productsData.pagination.total : 0;\n    },\n    countAllProducts() {\n      const number = this.productsData ? this.productsData.pagination.total : 0;\n      return `${this.productsData ? this.productsData.pagination.total : 0} `;\n    }\n  },\n  methods: {\n    loadProducts() {\n      this.productsLoading = true;\n      this.productsLoadingFailed = false;\n      clearTimeout(this.loadProductsTimer);\n      this.loadProductsTimer = setTimeout(() => {\n        axios.get(API_BASE_URL + '/api/products', {\n          params: {\n            page: this.page,\n            limit: this.productsPerPage,\n            categoryId: this.filterCategoryId,\n            minPrice: this.filterPriceFrom,\n            maxPrice: this.filterPriceTo\n          }\n        }).then(respsonse => this.productsData = respsonse.data).catch(() => this.productsLoadingFailed = true).then(() => this.productsLoading = false);\n      }, 0);\n    }\n  },\n  watch: {\n    page() {\n      this.loadProducts();\n    },\n    filterPriceFrom() {\n      this.loadProducts();\n    },\n    filterPriceTo() {\n      this.loadProducts();\n    },\n    filterCategoryId() {\n      this.loadProducts();\n    }\n  },\n  created() {\n    this.loadProducts();\n  }\n};","map":{"version":3,"names":["ProductList","BasePagination","ProductFilter","axios","API_BASE_URL","components","data","filterPriceFrom","filterPriceTo","filterCategoryId","page","productsPerPage","productsData","productsLoading","productsLoadingFailed","computed","products","items","map","product","image","file","url","countProducts","pagination","total","countAllProducts","number","methods","loadProducts","clearTimeout","loadProductsTimer","setTimeout","get","params","limit","categoryId","minPrice","maxPrice","then","respsonse","catch","watch","created"],"sources":["src/pages/MainPage.vue"],"sourcesContent":["<template>\n  <main class=\"content container\">\n    <div class=\"content__top content__top--catalog\">\n      <h1 class=\"content__title\">\n        Каталог\n      </h1>\n      <span class=\"content__info\">\n        {{ countProducts }} товара\n      </span>\n    </div>\n    <div class=\"content__catalog\">\n      <ProductFilter :price-from.sync=\"filterPriceFrom\" :price-to.sync=\"filterPriceTo\" :category-id.sync=\"filterCategoryId\"/>\n\n      <section class=\"catalog\">\n        <div class=\"\" v-if=\"productsLoading\">Загрузка товаров...</div>\n        <div class=\"\" v-if=\"productsLoadingFailed\">\n          Произошла ошибка при загрузке товаров...\n          <button @click.prevent=\"loadProducts\">Попробовать снова</button>\n        </div>\n        <ProductList :products=\"products\"/>\n        <BasePagination v-model=\"page\" :count=\"countProducts\" :per-page=\"productsPerPage\"/>\n      </section>\n    </div>\n  </main>\n</template>\n<script>\n  import ProductList from '@/components/ProductList.vue'\n  import BasePagination from '@/components/BasePagination.vue'\n  import ProductFilter from '@/components/ProductFilter.vue'\n  import axios from 'axios'\n  import {API_BASE_URL} from '@/config.js'\n\n  export default {\n    components: {ProductList, BasePagination, ProductFilter},\n    data() {\n      return {\n        filterPriceFrom: 0,\n        filterPriceTo: 0,\n        filterCategoryId: 0,\n\n        page: 1,\n        productsPerPage: 3,\n\n        productsData: null,\n        productsLoading: false,\n        productsLoadingFailed: false\n      }\n    },\n    computed: {\n      products() {\n        return this.productsData \n        ? this.productsData.items.map(product => {\n          return {\n            ...product,\n            image: product.image.file.url\n          }\n        })\n        : []\n      },\n      countProducts() {\n        return this.productsData ? this.productsData.pagination.total : 0\n      },\n      countAllProducts() {\n        const number = this.productsData ? this.productsData.pagination.total : 0\n        return `${this.productsData ? this.productsData.pagination.total : 0} `\n      }\n    },\n    methods: {\n      loadProducts() {\n        this.productsLoading = true\n        this.productsLoadingFailed = false\n        clearTimeout(this.loadProductsTimer)\n        this.loadProductsTimer =  setTimeout(() => {\n          axios.get(API_BASE_URL + '/api/products', {\n            params: {\n              page: this.page,\n              limit: this.productsPerPage,\n              categoryId: this.filterCategoryId,\n              minPrice: this.filterPriceFrom,\n              maxPrice: this.filterPriceTo\n            }\n          })\n          .then(respsonse => this.productsData = respsonse.data)\n          .catch(() => this.productsLoadingFailed = true)\n          .then(() => this.productsLoading = false)\n        }, 0)\n      }\n    },\n    watch: {\n      page() {\n        this.loadProducts()\n      },\n      filterPriceFrom() {\n        this.loadProducts()\n      },\n      filterPriceTo() {\n        this.loadProducts()\n      },\n      filterCategoryId() {\n        this.loadProducts()\n      }\n    },\n    created() {\n      this.loadProducts()\n    }\n\n  }\n\n</script>"],"mappings":"AA0BA,OAAAA,WAAA;AACA,OAAAC,cAAA;AACA,OAAAC,aAAA;AACA,OAAAC,KAAA;AACA,SAAAC,YAAA;AAEA;EACAC,UAAA;IAAAL,WAAA;IAAAC,cAAA;IAAAC;EAAA;EACAI,KAAA;IACA;MACAC,eAAA;MACAC,aAAA;MACAC,gBAAA;MAEAC,IAAA;MACAC,eAAA;MAEAC,YAAA;MACAC,eAAA;MACAC,qBAAA;IACA;EACA;EACAC,QAAA;IACAC,SAAA;MACA,YAAAJ,YAAA,GACA,KAAAA,YAAA,CAAAK,KAAA,CAAAC,GAAA,CAAAC,OAAA;QACA;UACA,GAAAA,OAAA;UACAC,KAAA,EAAAD,OAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAC;QACA;MACA,KACA;IACA;IACAC,cAAA;MACA,YAAAX,YAAA,QAAAA,YAAA,CAAAY,UAAA,CAAAC,KAAA;IACA;IACAC,iBAAA;MACA,MAAAC,MAAA,QAAAf,YAAA,QAAAA,YAAA,CAAAY,UAAA,CAAAC,KAAA;MACA,eAAAb,YAAA,QAAAA,YAAA,CAAAY,UAAA,CAAAC,KAAA;IACA;EACA;EACAG,OAAA;IACAC,aAAA;MACA,KAAAhB,eAAA;MACA,KAAAC,qBAAA;MACAgB,YAAA,MAAAC,iBAAA;MACA,KAAAA,iBAAA,GAAAC,UAAA;QACA7B,KAAA,CAAA8B,GAAA,CAAA7B,YAAA;UACA8B,MAAA;YACAxB,IAAA,OAAAA,IAAA;YACAyB,KAAA,OAAAxB,eAAA;YACAyB,UAAA,OAAA3B,gBAAA;YACA4B,QAAA,OAAA9B,eAAA;YACA+B,QAAA,OAAA9B;UACA;QACA,GACA+B,IAAA,CAAAC,SAAA,SAAA5B,YAAA,GAAA4B,SAAA,CAAAlC,IAAA,EACAmC,KAAA,YAAA3B,qBAAA,SACAyB,IAAA,YAAA1B,eAAA;MACA;IACA;EACA;EACA6B,KAAA;IACAhC,KAAA;MACA,KAAAmB,YAAA;IACA;IACAtB,gBAAA;MACA,KAAAsB,YAAA;IACA;IACArB,cAAA;MACA,KAAAqB,YAAA;IACA;IACApB,iBAAA;MACA,KAAAoB,YAAA;IACA;EACA;EACAc,QAAA;IACA,KAAAd,YAAA;EACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}